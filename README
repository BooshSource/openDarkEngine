OpenDarkEngine (OPDE) readme
----------------------------

    OPDE was created as an effort to build a 
multiplatform engine supporting the LookingGlass'es (TM) 
data files from the original DarkEngine games.
So far, a basic display of levels work.

Requirements
------------
OPDE needs OGRE3D library in version 1.2.0 or 
newer and Devil image library (an ogre requirement).
Unfortunetly, the DevIL library needs a small patch 
to resolve the issue number 1211071 - too strict check 
of pcx headers. It is allready fixed in the CVS version,
so hopefully next release will be ok.


The structure of the sources
----------------------------
As of now, the sources are split into these directories:
DarkSceneManager - a scene manager rendering the level geometry, utilising the BSP-Portal structure of the WR/WRRGB chunk of the GAM files.
darkdb - The library of objects used for reading (and writing when implemented) of Tag Files
widgets - Directory, where the widgets reside - for example the display part of the console
tools - Mesh converter from the .bin format to .xml and .material, used by ogre (for in-game objects conversion)
console - The in-game console backend sources


Building
--------
On *nix systems, building with (replace the OPDE_DIR with the directory in which the source resides) should be sufficient:
cd OPDE_DIR
./bootstrap
./configure
make

The windows build was not yet tested.


Running
-------
You will need to initialize resources.cfg, opde.cfg and plugins.cfg for the main executable to work.
see the opde wiki for more info:
    http://opde.sourceforge.net/wiki/index.php/Main_Page


Package Versioning Schmeme:
---------------------------

Version numbers are divided into three parts, the major release
number, the minor release number and the patchlevel.  The version
number is appended to the name of the tarballs:

  <project>-<major>.<minor>.<patchlevel>.tar.gz

For example

  projectname-0.9.3.tar.gz

A change in the major release number indicates major changes in
the interfaces.  Between minor releases, every effort should be
made to keep the interfaces compatible.  The patchlevels indicate
the day to day work between the releases.  Odd minor release
numbers like 2.1.0 indicate unstable development releases while
even numbers like 2.4.0 indicate stable releases.
