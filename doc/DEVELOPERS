                        Notes for Developers:            -*-text-*-
                        ---------------------

Last updated on 01-Apr-2007

Requirements
------------
OPDE needs:
* OGRE3D library, 1.2 series and Devil image library (an ogre requirement, should be a part of SDK under windows).
* CEGUI (The part of Ogre SDK under windows, do not install separately) - 0.4 series
* CMake


Building
--------
On *nix systems, building with (replace the OPDE_DIR with the directory in which the source resides) should be sufficient:

Note: For out of source builds (prefered method), create a separate directory that will hold the built files, 
and run cmake with the path to the source directory (the one containing this readme) as a parameter (replace the BUILD_DIR and OPDE_DIR 
with your paths):

cd BUILD_DIR
cmake OPDE_DIR
make

Note: You can also use ccmake instead of cmake, which is a GUI frontend to cmake that will let you change the variables. That means Doxygen
building, build type, debug code building. This works on both windows and *nix platforms.

On windows, please ensure that the OGRE_HOME environmental variables is set (should be if the installation was done using the ogre sdk).

If the cmake will have problem locating the CEGUI libs/headers, you can try setting these environmental variables:
SET CEGUI_HOME=/OgreSDK
SET CEGUI_EXTRA_INCLUDE_DIR=/OgreSDK/samples/include

Ensure, that MinGW/Visual C++ make systems are usable. (Cmake should test this first time it is run)

Then progress with (from commandline, being in the root directory of OPDE project):

cmake .

or, if wanting to select the generator (for example MinGW makefiles)

cmake . -G "MinGW Makefiles"

Note: You can also use the out of source build approach as *nix building guide notes. This makes your source directory clean.

Please read the output of cmake carefuly. If the makefiles/VC solution is not present, it will give you hints about what was wrong.

The result should be compilable by your system (VC / mingw32-make for mingw)

If you have a problem making for Mingw, please ensure that "sh" executable is NOT in path. If it is, and can't be relocated, select MSYS Makefiles rather than MinGW ones.

Currently, Debug mode in VC is too slow for normal operation. For testing purposes, please use Release mode. 
Windows users: If you run cmake for Debug mode - default, edit the cmakelists.txt, change CMAKE_BUILD_TYPE to Release in the set command, 
remove the CMakeCache.txt and rerun cmake. This will ensure correct lib files are linked (_d prefixed or not).


Running
-------
You will need to initialize resources.cfg, opde.cfg and plugins.cfg for the main executable to work.
see the opde wiki for more info:
    http://opde.sourceforge.net/wiki/index.php/Main_Page
